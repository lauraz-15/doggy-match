{"ast":null,"code":"var _jsxFileName = \"/Users/CodingWorld/Desktop/Repos/doggy-match/src/components/Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/01.jpeg`\n  }, {\n    id: 1,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/01.jpeg`\n  }, {\n    id: 2,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/02.jpeg`\n  }, {\n    id: 2,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/02.jpeg`\n  }, {\n    id: 3,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/03.jpeg`\n  }, {\n    id: 3,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/03.jpeg`\n  }, {\n    id: 4,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/04.jpeg`\n  }, {\n    id: 4,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/04.jpeg`\n  }, {\n    id: 5,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/05.jpeg`\n  }, {\n    id: 5,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/05.jpeg`\n  }, {\n    id: 6,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/06.jpeg`\n  }, {\n    id: 6,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/06.jpeg`\n  }, {\n    id: 7,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/07.jpeg`\n  }, {\n    id: 7,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/07.jpeg`\n  }, {\n    id: 8,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/08.jpeg`\n  }, {\n    id: 8,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/08.jpeg`\n  }, {\n    id: 9,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/09.jpeg`\n  }, {\n    id: 9,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/09.jpeg`\n  }, {\n    id: 10,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/10.jpeg`\n  }, {\n    id: 10,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/10.jpeg`\n  }, {\n    id: 11,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/11.jpeg`\n  }, {\n    id: 11,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/11.jpeg`\n  }, {\n    id: 12,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/12.jpeg`\n  }, {\n    id: 12,\n    status: '',\n    img: `${process.env.PUBLIC_URL}/dogs/12.jpeg`\n  }].sort(() => Math.random() - 0.5));\n  const [previousCardState, setPreviousCardState] = useState(-1);\n  const previousIndex = useRef(-1);\n  const matchCheck = currCard => {\n    console.log('cuurent card.id', cards[currCard].id);\n    console.log('prev card id:', cards[previousCardState].id);\n    if (cards[currCard].id === cards[previousCardState].id) {\n      console.log('same ids! MATCH!!!');\n      cards[currCard].status = 'active matched';\n      cards[previousCardState].status = 'active matched';\n      setPreviousCardState(-1);\n    } else {\n      console.log('GAME ON');\n      cards[currCard].status = 'active';\n      setCards([...cards]);\n      setTimeout(() => {\n        setPreviousCardState(-1);\n        cards[currCard].status = 'unmatch';\n        cards[previousCardState].status = 'unmatch';\n        setCards([...cards]);\n      }, 1000);\n    }\n  };\n  const clickhandler = index => {\n    console.log('clicked card', index);\n    console.log('previousIndex.current', previousIndex.current);\n    if (index !== previousIndex.current) {\n      if (cards[index].status === 'active matched') {\n        alert('already matched!');\n      } else {\n        // if previous card not set\n        if (previousCardState === -1) {\n          previousIndex.current = index;\n          cards[index].status = 'active';\n          setCards([...cards]);\n          setPreviousCardState(index);\n        } else {\n          console.log('checking match');\n          matchCheck(index);\n          // previousIndex.current = -1;\n        }\n      }\n    } else {\n      alert('CARD CURRENTLY SELECTED!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: cards.map((card, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        index: index,\n        clickhandler: clickhandler\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"9pBGlVxCK9nWhCnVZ7E1wNRXl9w=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useRef","useState","Card","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","id","status","img","process","env","PUBLIC_URL","sort","Math","random","previousCardState","setPreviousCardState","previousIndex","matchCheck","currCard","console","log","setTimeout","clickhandler","index","current","alert","className","children","map","card","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/CodingWorld/Desktop/Repos/doggy-match/src/components/Cards.js"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport Card from './Card';\n\nconst Cards = () => {\n  const [cards, setCards] = useState (\n    [\n      {id: 1, status: '', img: `${process.env.PUBLIC_URL}/dogs/01.jpeg`},\n      {id: 1, status: '', img: `${process.env.PUBLIC_URL}/dogs/01.jpeg`},\n      {id: 2, status: '', img: `${process.env.PUBLIC_URL}/dogs/02.jpeg`},\n      {id: 2, status: '', img: `${process.env.PUBLIC_URL}/dogs/02.jpeg`},\n      {id: 3, status: '', img: `${process.env.PUBLIC_URL}/dogs/03.jpeg`},\n      {id: 3, status: '', img: `${process.env.PUBLIC_URL}/dogs/03.jpeg`},\n      {id: 4, status: '', img: `${process.env.PUBLIC_URL}/dogs/04.jpeg`},\n      {id: 4, status: '', img: `${process.env.PUBLIC_URL}/dogs/04.jpeg`},\n      {id: 5, status: '', img: `${process.env.PUBLIC_URL}/dogs/05.jpeg`},\n      {id: 5, status: '', img: `${process.env.PUBLIC_URL}/dogs/05.jpeg`},\n      {id: 6, status: '', img: `${process.env.PUBLIC_URL}/dogs/06.jpeg`},\n      {id: 6, status: '', img: `${process.env.PUBLIC_URL}/dogs/06.jpeg`},\n      {id: 7, status: '', img: `${process.env.PUBLIC_URL}/dogs/07.jpeg`},\n      {id: 7, status: '', img: `${process.env.PUBLIC_URL}/dogs/07.jpeg`},\n      {id: 8, status: '', img: `${process.env.PUBLIC_URL}/dogs/08.jpeg`},\n      {id: 8, status: '', img: `${process.env.PUBLIC_URL}/dogs/08.jpeg`},\n      {id: 9, status: '', img: `${process.env.PUBLIC_URL}/dogs/09.jpeg`},\n      {id: 9, status: '', img: `${process.env.PUBLIC_URL}/dogs/09.jpeg`},\n      {id: 10, status: '', img: `${process.env.PUBLIC_URL}/dogs/10.jpeg`},\n      {id: 10, status: '', img: `${process.env.PUBLIC_URL}/dogs/10.jpeg`},\n      {id: 11, status: '', img: `${process.env.PUBLIC_URL}/dogs/11.jpeg`},\n      {id: 11, status: '', img: `${process.env.PUBLIC_URL}/dogs/11.jpeg`},\n      {id: 12, status: '', img: `${process.env.PUBLIC_URL}/dogs/12.jpeg`},\n      {id: 12, status: '', img: `${process.env.PUBLIC_URL}/dogs/12.jpeg`},\n    ].sort (() => Math.random () - 0.5)\n  );\n\n  const [previousCardState, setPreviousCardState] = useState (-1);\n  const previousIndex = useRef (-1);\n\n  const matchCheck = currCard => {\n    console.log ('cuurent card.id', cards[currCard].id);\n    console.log ('prev card id:', cards[previousCardState].id);\n    if (cards[currCard].id === cards[previousCardState].id) {\n      console.log ('same ids! MATCH!!!');\n      cards[currCard].status = 'active matched';\n      cards[previousCardState].status = 'active matched';\n      setPreviousCardState (-1);\n    } else {\n      console.log ('GAME ON');\n      cards[currCard].status = 'active';\n      setCards ([...cards]);\n      setTimeout (() => {\n        setPreviousCardState (-1);\n        cards[currCard].status = 'unmatch';\n        cards[previousCardState].status = 'unmatch';\n        setCards ([...cards]);\n      }, 1000);\n    }\n  };\n\n  const clickhandler = index => {\n    console.log ('clicked card', index);\n    console.log ('previousIndex.current', previousIndex.current);\n    if (index !== previousIndex.current) {\n      if (cards[index].status === 'active matched') {\n        alert ('already matched!');\n      } else {\n        // if previous card not set\n        if (previousCardState === -1) {\n          previousIndex.current = index;\n          cards[index].status = 'active';\n          setCards ([...cards]);\n          setPreviousCardState (index);\n        } else {\n          console.log ('checking match');\n          matchCheck (index);\n          // previousIndex.current = -1;\n        }\n      }\n    } else {\n      alert ('CARD CURRENTLY SELECTED!');\n    }\n  };\n  return (\n    <div className=\"container\">\n      {cards.map ((card, index) => {\n        return (\n          <Card\n            card={card}\n            index={index}\n            key={index}\n            clickhandler={clickhandler}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}