{"ast":null,"code":"var _jsxFileName = \"/Users/CodingWorld/Desktop/DOGGY MATCH/doggy-match/src/components/Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    status: '',\n    img: '/dogs/01.jpeg'\n  }, {\n    id: 1,\n    status: '',\n    img: '/dogs/01.jpeg'\n  }, {\n    id: 2,\n    status: '',\n    img: '/dogs/02.jpeg'\n  }, {\n    id: 2,\n    status: '',\n    img: '/dogs/02.jpeg'\n  }, {\n    id: 3,\n    status: '',\n    img: '/dogs/03.jpeg'\n  }, {\n    id: 3,\n    status: '',\n    img: '/dogs/03.jpeg'\n  }, {\n    id: 4,\n    status: '',\n    img: '/dogs/04.jpeg'\n  }, {\n    id: 4,\n    status: '',\n    img: '/dogs/04.jpeg'\n  }, {\n    id: 5,\n    status: '',\n    img: '/dogs/05.jpeg'\n  }, {\n    id: 5,\n    status: '',\n    img: '/dogs/05.jpeg'\n  }, {\n    id: 6,\n    status: '',\n    img: '/dogs/06.jpeg'\n  }, {\n    id: 6,\n    status: '',\n    img: '/dogs/06.jpeg'\n  }, {\n    id: 7,\n    status: '',\n    img: '/dogs/07.jpeg'\n  }, {\n    id: 7,\n    status: '',\n    img: '/dogs/07.jpeg'\n  }, {\n    id: 8,\n    status: '',\n    img: '/dogs/08.jpeg'\n  }, {\n    id: 8,\n    status: '',\n    img: '/dogs/08.jpeg'\n  }].sort(() => Math.random() - 0.5));\n  const [previousCardState, setPreviousCardState] = useState(-1);\n  const previousIndex = useRef(-1);\n  const matchCheck = currCard => {\n    if (cards[currCard].id === cards[previousCardState].id) {\n      cards[currCard].status = 'active matched';\n      cards[previousCardState].status = 'active matched';\n      setPreviousCardState(-1);\n    } else {\n      cards[currCard].status = 'active';\n      setCards([...cards]);\n      setTimeout(() => {\n        setPreviousCardState(-1);\n        cards[currCard].status = 'unmatch';\n        cards[previousCardState].status = 'unmatch';\n        setCards([...cards]);\n      }, 1000);\n    }\n  };\n  const clickhandler = index => {\n    console.log('clicked card', index);\n    // alert (index);\n\n    if (index !== previousIndex.current) {\n      console.log('GAME ON');\n      if (cards[index].status === 'active matched') {\n        alert('already matched!');\n      } else {\n        if (previousCardState === -1) {\n          previousIndex.current = index;\n          cards[index].status = 'active';\n          setCards([...cards]);\n          setPreviousCardState(index);\n        } else {\n          matchCheck(index);\n          previousIndex.current = -1;\n        }\n      }\n    } else {\n      alert('CARD CURRENTLY SELECTED!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: cards.map((card, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        index: index,\n        clickhandler: clickhandler\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"7ldg/fo5G9byKSC8Fs79iYZucrM=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useRef","useState","Card","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","id","status","img","sort","Math","random","previousCardState","setPreviousCardState","previousIndex","matchCheck","currCard","setTimeout","clickhandler","index","console","log","current","alert","className","children","map","card","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/CodingWorld/Desktop/DOGGY MATCH/doggy-match/src/components/Cards.js"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport Card from './Card';\n\nconst Cards = () => {\n  const [cards, setCards] = useState (\n    [\n      {id: 1, status: '', img: '/dogs/01.jpeg'},\n      {id: 1, status: '', img: '/dogs/01.jpeg'},\n      {id: 2, status: '', img: '/dogs/02.jpeg'},\n      {id: 2, status: '', img: '/dogs/02.jpeg'},\n      {id: 3, status: '', img: '/dogs/03.jpeg'},\n      {id: 3, status: '', img: '/dogs/03.jpeg'},\n      {id: 4, status: '', img: '/dogs/04.jpeg'},\n      {id: 4, status: '', img: '/dogs/04.jpeg'},\n      {id: 5, status: '', img: '/dogs/05.jpeg'},\n      {id: 5, status: '', img: '/dogs/05.jpeg'},\n      {id: 6, status: '', img: '/dogs/06.jpeg'},\n      {id: 6, status: '', img: '/dogs/06.jpeg'},\n      {id: 7, status: '', img: '/dogs/07.jpeg'},\n      {id: 7, status: '', img: '/dogs/07.jpeg'},\n      {id: 8, status: '', img: '/dogs/08.jpeg'},\n      {id: 8, status: '', img: '/dogs/08.jpeg'},\n    ].sort (() => Math.random () - 0.5)\n  );\n\n  const [previousCardState, setPreviousCardState] = useState (-1);\n  const previousIndex = useRef (-1);\n\n  const matchCheck = currCard => {\n    if (cards[currCard].id === cards[previousCardState].id) {\n      cards[currCard].status = 'active matched';\n      cards[previousCardState].status = 'active matched';\n      setPreviousCardState (-1);\n    } else {\n      cards[currCard].status = 'active';\n      setCards ([...cards]);\n      setTimeout (() => {\n        setPreviousCardState (-1);\n        cards[currCard].status = 'unmatch';\n        cards[previousCardState].status = 'unmatch';\n        setCards ([...cards]);\n      }, 1000);\n    }\n  };\n\n  const clickhandler = index => {\n    console.log ('clicked card', index);\n    // alert (index);\n\n    if (index !== previousIndex.current) {\n      console.log ('GAME ON');\n      if (cards[index].status === 'active matched') {\n        alert ('already matched!');\n      } else {\n        if (previousCardState === -1) {\n          previousIndex.current = index;\n          cards[index].status = 'active';\n          setCards ([...cards]);\n          setPreviousCardState (index);\n        } else {\n          matchCheck (index);\n          previousIndex.current = -1;\n        }\n      }\n    } else {\n      alert ('CARD CURRENTLY SELECTED!');\n    }\n  };\n  return (\n    <div className=\"container\">\n      {cards.map ((card, index) => {\n        return (\n          <Card\n            card={card}\n            index={index}\n            key={index}\n            clickhandler={clickhandler}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}